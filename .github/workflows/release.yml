name: Release

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - 'develop'
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ITCH_USERNAME: structed
  ITCH_GAME_ID: godot-playfab
  ASSET_LIB_USERNAME: structed
  ASSET_LIB_PASSSWORD: ${{ secrets.ASSET_STORE_PASSWORD }}
  ASSET_LIB_ASSET_ID: 1321

jobs:
  prerelease:
      if: "github.event.head_commit.message != 'chore: storing version and changelog'"
      name: Preparing release
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
            with:
              fetch-depth: 0
              token: ${{ secrets.PAT }}

          - name: Calculate version
            id: calculate_version
            uses: mathieudutour/github-tag-action@v6.0
            with:
              tag_prefix: ""
              github_token: ${{ secrets.PAT }}
              dry_run: true
              default_bump: false

          - name: "Write changelog"
            run: |
              CHANGELOG=""
              if [ -e addons/godot-playfab/CHANGELOG.md ]
              then
                  CHANGELOG=$(cat addons/godot-playfab/CHANGELOG.md)
              fi
              echo -e "${{steps.calculate_version.outputs.changelog}}\n\n${CHANGELOG}" > addons/godot-playfab/CHANGELOG.md
            if: github.ref == 'refs/heads/main' && steps.calculate_version.outputs.new_version != ''

          - name: "Update version in plugin.cfg"
            run: |
              sed -i -re 's/version=".+$/version="${{ steps.calculate_version.outputs.new_version }}"/gi' addons/godot-playfab/plugin.cfg
            if: steps.calculate_version.outputs.new_version != ''

          - name: "Commit"
            uses: EndBug/add-and-commit@v7.2.1
            with:
              message: 'chore: storing version and changelog'
              push: true
            if: steps.calculate_version.outputs.new_version != ''

  release:
    if: "github.event.head_commit.message == 'chore: storing version and changelog'"
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create version
        id: create_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          tag_prefix: ""
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: godot-playfab-${{ steps.create_version.outputs.new_tag }}
          path: addons/godot-playfab/
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
        if: steps.create_version.outputs.new_version != ''

      - uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.create_version.outputs.new_tag }}
          draft: true
          prerelease: ${{ github.ref_name != 'main' }}
          artifacts: ""
          replacesArtifacts: false
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.create_version.outputs.new_tag }}
        if: steps.create_version.outputs.new_version != ''

  itch:
    if: "github.event.head_commit.message == 'chore: storing version and changelog'"
    runs-on: ubuntu-latest
    needs: release

    steps:

      - name: Calculate version
        id: calculate_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          tag_prefix: "v"
          github_token: ${{ secrets.PAT }}
          dry_run: true
          default_bump: false

      # Using https://github.com/KikimoraGames/itch-publish
      - uses: actions/download-artifact@v3
        with:
          name: godot-playfab-${{ steps.calculate_version.outputs.previous_tag }}
          path: addons/godot-playfab/

      - uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{secrets.GODOT_PLAYFAB_ITCHIO_SECRET}}
          gameData: .
          itchUsername: ${{env.ITCH_USERNAME}}
          itchGameId: ${{ env.ITCH_GAME_ID }}
          buildChannel: windows-mac-linux
          buildNumber: ${{ steps.calculate_version.outputs.previous_tag }}

  assetlib:
    if: "github.ref == 'refs/heads/main' && github.event.head_commit.message == 'chore: storing version and changelog'"
    runs-on: ubuntu-latest
    needs: release
    name: Godot AssetLib
    steps:

      - uses: actions/checkout@v3

      - name: Godot Asset Lib
        uses: deep-entertainment/godot-asset-lib-action@v0.4.0
        with:
          username: ${{ env.ASSET_LIB_USERNAME }}
          password: ${{ env.ASSET_LIB_PASSSWORD }}
          assetId: ${{ env.ASSET_LIB_ASSET_ID }}
