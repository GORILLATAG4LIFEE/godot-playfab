name: Release

on:
  push:
    tags:
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ITCH_USERNAME: structed
  ITCH_GAME_ID: godot-playfab
  ASSET_LIB_USERNAME: structed
  ASSET_LIB_PASSSWORD: ${{ secrets.ASSET_STORE_PASSWORD }}
  ASSET_LIB_ASSET_ID: 1321

jobs:
  prerelease:
      if: "github.event.head_commit.message != 'chore: storing version and changelog'"
      name: Preparing release
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
            with:
              fetch-depth: 0
              token: ${{ secrets.token }}

          - name: Calculate version
            id: calculate_version
            uses: mathieudutour/github-tag-action@v5.6
            with:
              tag_prefix: ""
              github_token: ${{ secrets.token }}
              dry_run: true
              default_bump: false
          # - name: "Write changelog"
          #   run: |
          #     CHANGELOG=""
          #     if [ -e CHANGELOG.md ]
          #     then
          #         CHANGELOG=$(cat CHANGELOG.md)
          #     fi
          #     echo -e "${{steps.calculate_version.outputs.changelog}}\n\n${CHANGELOG}" > CHANGELOG.md
          #   if: steps.calculate_version.outputs.new_version != ''
          - name: "Update version in plugin.cfg"
            run: |
              sed -i -re 's/version=".+$/version="${{ steps.calculate_version.outputs.new_version }}"/gi' addons/godot-playfab/plugin.cfg
            if: inputs.updatePluginCfg && steps.calculate_version.outputs.new_version != ''
          - name: "Commit"
            uses: EndBug/add-and-commit@v7.2.1
            with:
              message: 'chore: storing version and changelog'
              push: true
            if: steps.calculate_version.outputs.new_version != ''

  release:
    if: "github.event.head_commit.message == 'chore: storing version and changelog'"
    runs-on: ubuntu-latest

    steps:

      # - name: Set Version
      #   run: |
      #     echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.token }}

      - name: Create version
        id: create_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          tag_prefix: ""
          github_token: ${{ secrets.token }}
          default_bump: false

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: godot-playfab-${{ env.version }}
          path: addons/godot-playfab/
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

      - uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.create_version.outputs.new_tag }}
          draft: true
          prerelease: ${{ github.ref_name != 'main' }}
          artifacts: ""
          replacesArtifacts: false
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.create_version.outputs.new_tag }}
        if: steps.create_version.outputs.new_version != ''

  # itch:
  #   runs-on: ubuntu-latest
  #   needs: release

  #   steps:

  #     - name: Set Version
  #       run: |
  #         echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

  #     # Using https://github.com/KikimoraGames/itch-publish
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: godot-playfab-${{ env.version }}
  #         path: addons/godot-playfab/

  #     - uses: KikimoraGames/itch-publish@v0.0.3
  #       with:
  #         butlerApiKey: ${{secrets.GODOT_PLAYFAB_ITCHIO_SECRET}}
  #         gameData: .
  #         itchUsername: ${{env.ITCH_USERNAME}}
  #         itchGameId: ${{ env.ITCH_GAME_ID }}
  #         buildChannel: windows-mac-linux
  #         buildNumber: ${{ env.version }}

  # assetlib:
  #   runs-on: ubuntu-latest
  #   needs: release
  #   name: Godot AssetLib
  #   steps:

  #     - name: Set Version
  #       run: |
  #         echo "version=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV


  #     - uses: actions/checkout@v3

  #     - name: Godot Asset Lib
  #       uses: deep-entertainment/godot-asset-lib-action@v0.4.0
  #       with:
  #         username: ${{ env.ASSET_LIB_USERNAME }}
  #         password: ${{ env.ASSET_LIB_PASSSWORD }}
  #         assetId: ${{ env.ASSET_LIB_ASSET_ID }}
